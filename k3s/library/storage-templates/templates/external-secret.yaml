{{- define "storage.externalSecret" -}}
{{- if and .Values.storage.persistence.enabled .Values.storage.persistence.useExternalSecrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Release.Name }}-storage-secret
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "storage.labels" . | nindent 4 }}
spec:
  refreshInterval: {{ .Values.storage.externalSecrets.refreshInterval | default "15s" | quote }}
  secretStoreRef:
    name: {{ .Values.storage.externalSecrets.secretStore.name }}
    kind: {{ .Values.storage.externalSecrets.secretStore.kind }}
  target:
    name: {{ .Values.storage.externalSecrets.target.name | default (printf "%s-storage-secrets" .Release.Name) }}
  data:
    {{- if .Values.storage.externalSecrets.nfsServer }}
    - secretKey: NFS_SERVER
      remoteRef:
        key: {{ .Values.storage.externalSecrets.nfsServer.key }}
        property: {{ .Values.storage.externalSecrets.nfsServer.property }}
    {{- end }}
    {{- if .Values.storage.externalSecrets.nfsPath }}
    - secretKey: NFS_PATH
      remoteRef:
        key: {{ .Values.storage.externalSecrets.nfsPath.key }}
        property: {{ .Values.storage.externalSecrets.nfsPath.property }}
    {{- end }}
    {{- with .Values.storage.externalSecrets.additionalData }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
{{- end }}
{{- end -}}
