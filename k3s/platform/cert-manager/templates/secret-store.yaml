{{- if and .Values.certmanager.enabled .Values.externalSecrets }}
# Wait for certmanager to be ready
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: cert-manager
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  provider:
    vault:
      server: {{ .Values.externalSecrets.vault.server | quote }}
      path: {{ .Values.externalSecrets.vault.pkiPath | quote }}
      version: "v2"
      auth:
        kubernetes:
          mountPath: {{ .Values.externalSecrets.vault.auth.kubernetes.mountPath | quote }}
          role: {{ .Values.externalSecrets.vault.auth.kubernetes.role | quote }}
          serviceAccountRef:
            name: {{ .Values.externalSecrets.serviceAccount.name }}
{{- end }}
