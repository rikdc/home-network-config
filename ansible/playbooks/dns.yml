---
# Play 1: Create and configure containers on Proxmox
- hosts: proxmox # Proxmox host
  vars_files:
    - ../default.config.yml
    - ../secrets.enc

  vars:
    ansible_become: true

  tasks:
    - name: Create Primary DNS Container
      community.general.proxmox:
        vmid: 140
        node: pve
        api_user: ansible@pam
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token }}"
        api_host: localhost
        password: "{{ proxmox_api_password }}"
        storage: local-lvm
        hostname: "{{ dns1_hostname }}"
        ostemplate: local:vztmpl/debian-12-standard_12.0-1_amd64.tar.zst
        netif: "{{ dns1_netif }}"
        pubkey: "{{ rsa_key }}"
        unprivileged: false
        state: present

    - name: Start container
      community.general.proxmox:
        vmid: 140
        api_user: ansible@pam
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token }}"
        api_host: localhost
        state: started

    - name: Create Secondary DNS Container
      community.general.proxmox:
        vmid: 141
        node: pve
        api_user: ansible@pam
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token }}"
        api_host: localhost
        password: "{{ proxmox_api_password }}"
        storage: local-lvm
        hostname: "{{ dns2_hostname }}"
        ostemplate: local:vztmpl/debian-12-standard_12.0-1_amd64.tar.zst
        netif: "{{ dns2_netif }}"
        pubkey: "{{ rsa_key }}"
        state: present
        unprivileged: false

    - name: Start container
      community.general.proxmox:
        vmid: 141
        api_user: ansible@pam
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token }}"
        api_host: localhost
        state: started

# Play 2: Setup the DNS Software
- hosts: dns
  vars_files:
    - ../default.config.yml
    - ../secrets.enc

  vars:
    ansible_become: true
  roles:
    - role: ngine_io.blocky_dns
